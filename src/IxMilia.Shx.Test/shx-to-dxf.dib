#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp","aliases":[]}]}}

#!csharp

#r "..\..\artifacts\bin\IxMilia.Shx\Debug\netstandard1.3\IxMilia.Shx.dll"

#!csharp

#r "nuget:IxMilia.Dxf"

#!csharp

using IxMilia.Dxf;
using IxMilia.Dxf.Entities;
using IxMilia.Shx;

#!csharp

var shxPath = @"TODO: set me";
var dxfPath = @"TODO: set me";

#!csharp

var basePoint = DxfPoint.Origin;
var shx = ShxFont.Load(shxPath);
var dxf = new DxfFile();
var glyphLayer = new DxfLayer("glyph");
dxf.Layers.Add(glyphLayer);
var gridLayer = new DxfLayer("grid")
{
    Color = DxfColor.FromIndex(4)
};
dxf.Layers.Add(gridLayer);
var textLayer = new DxfLayer("text")
{
    Color = DxfColor.FromIndex(2)
};
dxf.Layers.Add(textLayer);
foreach (var kvp in shx.Glyphs)
{
    var glyph = kvp.Value;

    // add real text below it
    dxf.Entities.Add(new DxfText(basePoint + new DxfVector(0.0, -glyph.Height, 0.0), glyph.Height / 2.0, ((char)kvp.Key).ToString()) { Color = DxfColor.ByLayer, Layer = textLayer.Name });

    // draw grid
    // for (var row = 0; row < shx.UpperCaseBaselineOffset; row++)
    // {
    //     var p1 = new DxfPoint(0.0, row, 0.0);
    //     var p2 = new DxfPoint(glyph.Width, row, 0.0);
    //     dxf.Entities.Add(new DxfLine(p1 + basePoint, p2 + basePoint) { Color = DxfColor.ByLayer, Layer = gridLayer.Name });
    // }
    // for (var col = 0; col < glyph.Width; col++)
    // {
    //     var p1 = new DxfPoint(col, 0.0, 0.0);
    //     var p2 = new DxfPoint(col, shx.UpperCaseBaselineOffset, 0.0);
    //     dxf.Entities.Add(new DxfLine(p1 + basePoint, p2 + basePoint) { Color = DxfColor.ByLayer, Layer = gridLayer.Name });
    // }

    // add glyph
    foreach (var path in glyph.Paths)
    {
        switch (path)
        {
            case ShxLine line:
                var p1 = new DxfPoint(line.P1.X, line.P1.Y, 0.0);
                var p2 = new DxfPoint(line.P2.X, line.P2.Y, 0.0);
                dxf.Entities.Add(new DxfLine(p1 + basePoint, p2 + basePoint) { Color = DxfColor.ByLayer, Layer = glyphLayer.Name });
                break;
            case ShxArc arc:
                var center = new DxfPoint(arc.Center.X, arc.Center.Y, 0.0);
                dxf.Entities.Add(new DxfArc(center + basePoint, arc.Radius, arc.StartAngle * 180.0 / Math.PI, arc.EndAngle * 180.0 / Math.PI) { Color = DxfColor.ByLayer, Layer = glyphLayer.Name });
                break;
        }
    }

    basePoint += new DxfVector(glyph.Width * 1.1, 0.0, 0.0);
}

dxf.Save(dxfPath);
